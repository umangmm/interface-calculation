package tem;
import java.io.*;
import java.util.*;

interface division { 
      
    double division(double n1,double n2); 
    
} 
interface multiplication { 
    
    double multiplication(double n1,double n2);
    
} 
interface addition { 
     
    double addition(double n1,double n2);
} 

public class calculator implements division,multiplication,addition {
    
    double c;
    
    public double division(double n1,double n2)  { 
        c=n2/n1;
        return c;
    } 
    public double multiplication(double n1,double n2)  { 
        
        c=n2*n1;
        return c;
    } 
    public double addition(double n1,double n2)  { 
        
        c=n2+n1;
        return c;
    } 
    public static void main(String[] args) { 
         double d;
        
        calculator cal = new calculator();
        
        Scanner scan = new Scanner(System.in);
        
        Stack<Integer> operator  = new Stack<Integer>();
        
        Stack<Double> value = new Stack<Double>();
        
        
        Stack<Integer> operatortmp  = new Stack<Integer>();
        
        Stack<Double> valuetmp = new Stack<Double>();
        
        
        
        System.out.println("Enter expression\n");
        
        String input = scan.next();
       
        input = input.replaceAll("-","+-");
        
        System.out.println(input);
        
        
        
        String temp = "";
        
        for (int i = 0;i < input.length();i++) {
            char ch = input.charAt(i);
            
            if (ch == '-') {
                temp = "-" + temp;
            System.out.println("i m in first if ..."+temp); 
            }
            
            else if (ch != '+' &&  ch != '*' && ch != '/') {
               temp = temp + ch;
            System.out.println("i m in else if number it issss...."+temp);
            }
            
            else {
                value.push(Double.parseDouble(temp));
                
                operator.push((int)ch);
                
                System.out.println("i m the valll stack..."+value.peek());
                
                System.out.println("i m op stack...."+operator.peek());
                
                temp = "";
                
                System.out.println("temp is empty now...");
                
                System.out.println("i m in else part sorry....");
            }
            
        }
        
        value.push(Double.parseDouble(temp));
        
        
        char operators[] = {'/','*','+'};
        
        for (int i = 0; i < 3; i++) {
            
            boolean flag = false;
            
            while (!operator.isEmpty()) {
                
                int optr = operator.pop();
                
                double n1 = value.pop();
                
                double n2 = value.pop();
                
                if (optr == operators[i]) {
                    
                    if (i == 0) {
                        
                        d=cal.division(n1,n2);
                        
                        valuetmp.push(d);
                        
                        flag = true;
                        
                        break;
                    }
                    else if (i == 1) {
                        
                        d=cal.multiplication(n1,n2);
                        
                        valuetmp.push(d);
                        
                        flag = true;
                        
                        break;
                    }
                    else if (i == 2) {
                        
                        d=cal.addition(n1,n2);
                        
                        valuetmp.push(d);
                        
                        flag = true;
                        
                        break;
                    }                                        
                }
                else {
                    valuetmp.push(n1);
                    
                    value.push(n2);
                    
                    operatortmp.push(optr);
                }                
            }    
                       
            while (!valuetmp.isEmpty())
                value.push(valuetmp.pop());
            
            while (!operatortmp.isEmpty())
                operator.push(operatortmp.pop());
            
            if (flag)
                i--;                            
        }    
        System.out.println("\nResult = "+value.pop());        
    }
}